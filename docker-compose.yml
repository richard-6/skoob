services:
  db:
    image: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
 
  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}

  backend:
    restart: always
    build:
      context: ./backend
    ports:
      - ${FASTAPI_PORT}:${FASTAPI_PORT}
    environment:
      POSTGRES_SERVER: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      FIRST_SUPERUSER_USERNAME: ${FIRST_SUPERUSER_USERNAME}
      FIRST_SUPERUSER_PASSWORD: ${FIRST_SUPERUSER_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild

volumes:
  pgdata:
